'use client';

import { useState, useEffect, useRef } from 'react';
import Image from 'next/image';

const Preloader = () => {
  const [isLoading, setIsLoading] = useState(true);
  const [isAudioPlaying, setIsAudioPlaying] = useState(false);
  const audioRef = useRef(null);

  useEffect(() => {
    // –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç
    const audio = new Audio('/sounds/background.mp3');
    audio.loop = true;
    audio.volume = 0.3; // –£–º–µ–Ω—å—à–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –∑–≤—É–∫–∞
    audioRef.current = audio;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞
    const playAudio = async () => {
      try {
        await audio.play();
        setIsAudioPlaying(true);
        console.log('–ú—É–∑—ã–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä–∞—Ç—å');
      } catch (error) {
        console.warn('–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:', error);
        // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞
      }
    };

    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å –º—É–∑—ã–∫—É —Å—Ä–∞–∑—É
    playAudio();

    // –¢–∞–π–º–µ—Ä –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞
    const loadingTimer = setTimeout(() => {
      setIsLoading(false);
      if (audioRef.current) {
        audioRef.current.pause();
        audioRef.current.currentTime = 0;
      }
      document.body.classList.add('loaded');
    }, 13500);

    // –û—á–∏—Å—Ç–∫–∞
    return () => {
      clearTimeout(loadingTimer);
      if (audioRef.current) {
        audioRef.current.pause();
        audioRef.current = null;
      }
    };
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –º—É–∑—ã–∫–∏ –ø–æ –∫–ª–∏–∫—É
  const handleUserInteraction = async () => {
    if (!isAudioPlaying && audioRef.current) {
      try {
        await audioRef.current.play();
        setIsAudioPlaying(true);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
      }
    }
  };

  if (!isLoading) return null;

  return (
    <div 
      className="animation-preloader" 
      onClick={handleUserInteraction} // –ó–∞–ø—É—Å–∫ –º—É–∑—ã–∫–∏ –ø–æ –∫–ª–∏–∫—É
      style={{ cursor: !isAudioPlaying ? 'pointer' : 'default' }}
    >
      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–≤—É–∫–∞ */}
      {!isAudioPlaying && (
        <div className="absolute top-4 right-4 bg-black bg-opacity-50 text-white px-3 py-1 rounded-full text-sm">
          üîä –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞
        </div>
      )}

      {/* –õ–æ–≥–æ—Ç–∏–ø —Å –≤—Ä–∞—â–µ–Ω–∏–µ–º */}
      <div className="mb-8">
        <Image
          src="/images/preloader.png"
          alt="–õ–æ–≥–æ—Ç–∏–ø –ü–¢–ë-–ú"
          width={120}
          height={120}
          className="animate-spin"
          style={{ 
            animation: 'spin 4s linear infinite',
            filter: 'drop-shadow(0 0 10px rgba(255, 255, 255, 0.5))'
          }}
          priority
        />
      </div>
      
      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç */}
      <div className="txt-loading">
        <span className="letters-loading" data-text-preloader="–ü">–ü</span>
        <span className="letters-loading" data-text-preloader="–¢">–¢</span>
        <span className="letters-loading" data-text-preloader="–ë">–ë</span>
        <span className="letters-loading" data-text-preloader="-">-</span>
        <span className="letters-loading" data-text-preloader="–ú">–ú</span>
      </div>

      {/* –°–∫—Ä—ã—Ç—ã–π –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç */}
      <audio ref={audioRef} className="hidden" />
    </div>
  );
};

export default Preloader;